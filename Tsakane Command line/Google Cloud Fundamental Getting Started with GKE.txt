Google Cloud Fundamentals: Getting Started with GKE


Objectives
In this lab, you learn how to perform the following tasks:

Provision a Kubernetes cluster using Kubernetes Engine.

Deploy and manage Docker containers using kubect


Task 2: Confirm that needed APIs are enabled

NB:1. In the GCP Console, on the Navigation menu (Navigation menu), click APIs & Services.

   2.Scroll down in the list of enabled APIs, and confirm that both of these APIs are enabled:

	Kubernetes Engine API
	Container Registry AP

Task 3: Start a Kubernetes Engine cluster

1. For convenience, place the zone that Qwiklabs assigned you to into an environment variable called MY_ZONE. At the Cloud Shell prompt, type this partial command:
	export MY_ZONE=us-central1-a


2.Start a Kubernetes cluster managed by Kubernetes Engine. Name the cluster webfrontend and configure it to run 2 nodes:

	gcloud container clusters create webfrontend --zone $MY_ZONE --num-nodes 2

3. After the cluster is created, check your installed version of Kubernetes using the kubectl version command:

	kubectl version

Task 4: Run and deploy a container

1. From your Cloud Shell prompt, launch a single instance of the nginx container. (Nginx is a popular web server.)

	kubectl create deploy nginx --image=nginx:1.17.10
2. View the pod running the nginx container:

	kubectl get pods
3.Expose the nginx container to the Internet:

	kubectl expose deployment nginx --port 80 --type LoadBalancer
4.View the new service:

	kubectl get services
5. Open a new web browser tab and paste your cluster's external IP address into the address bar. The default home page of the Nginx browser is displayed.

6.Scale up the number of pods running on your service:

	ubectl scale deployment nginx --replicas 3
7.Confirm that Kubernetes has updated the number of pods:

	kubectl get pods
8.Confirm that your external IP address has not changed:

kubectl get services